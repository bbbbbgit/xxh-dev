#!/usr/bin/env xonsh
import os, sys, argparse

class XxhDevEnv(object):
    def __init__(self):
        parser = argparse.ArgumentParser(
            usage='''xde <command>

xxh development environment (xde) commands:

   build   Build the docker containers and get the xxh code if ./xxh is not exists
   up      Docker-compose up the containers
   test    Run tests
   start   Docker-compose start the containers
   stop    Docker-compose stop the containers
   remove  Docker-compose remove the containers
''')
        parser.add_argument('command', help='Command to run')

        args = parser.parse_args(sys.argv[1:2])
        if not hasattr(self, args.command):
            print('Unrecognized command\n')
            parser.print_help()
            sys.exit(1)

        getattr(self, args.command)()

    def build(self):
        # parser = argparse.ArgumentParser(description='')
        # parser.add_argument('--add', action='store_true')
        # args = parser.parse_args(sys.argv[2:])
        if not os.path.exists('xxh'):
            git clone --depth 1 https://github.com/xonssh/xxh

        docker build . -t xonssh/xxh-dev-ubuntu

    def up(self):
        docker-compose up -d

    def start(self):
        docker-compose start

    def stop(self):
        docker-compose stop

    def remove(self):
        docker-compose rm -f -s

    def test(self):
        docker exec xxh-dev_start_1 xonsh /xxh-dev/tests/tests.xsh

if __name__ == '__main__':
    XxhDevEnv()